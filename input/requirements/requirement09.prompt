Reduced Places To Define New LLM. Act as a senior programmer analyzing the code in a TypeScript application where the content of each file in the application's codebase is shown below in a code block. To add a new LLM provider to this project requires the developer modify too many source code files, so establish how the process of adding a new LLM provider can be made easier requiring less source code files to be changed by the developer. For example, this process could introduce a more declarative or plugin-style architecture, where each LLM provider defines its models, capabilities, required environment variables, and error patterns in a self-contained configuration or manifest and there could be a central registry could dynamically load these provider configurations. Do not try to maintain backward compatibility, by re-exporting, to allow all existing code continues to work unchanged - instead modify all the references in the dependency files to use the modified paths. Include the list or relative file paths of each source file affected and delete any no longer used files which result from this refactoring.
